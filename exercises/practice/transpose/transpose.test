#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
proc skip {args} {
    if {!([info exists ::env(RUN_ALL)] && $::env(RUN_ALL))} {
        ::tcltest::skip {*}$args
    }
}

proc orderedListsMatch {expected actual} {
    if {[llength $expected] != [llength $actual]} {
        return false
    }
    foreach e $expected a $actual {
        if {$e != $a} {
            return false
        }
    }
    return true
}
customMatch list orderedListsMatch

############################################################
source "transpose.tcl"

test transpose-1 "empty string" -body {
    transpose {}
} -returnCodes OK -match list -result {}

skip transpose-2
test transpose-2 "two characters in a row" -body {
    transpose {"A1"}
} -returnCodes OK -match list -result {"A" "1"}

skip transpose-3
test transpose-3 "two characters in a column" -body {
    transpose {
        "A"
        "1"
    }
} -returnCodes OK -match list -result {
    "A1"
}

skip transpose-4
test transpose-4 "simple" -body {
    transpose {
        "ABC"
        "123"
    }
} -returnCodes OK -match list -result {
    "A1"
    "B2"
    "C3"
}

skip transpose-5
test transpose-5 "single line" -body {
    transpose {
        "Single line."
    }
} -returnCodes OK -match list -result {
    "S"
    "i"
    "n"
    "g"
    "l"
    "e"
    " "
    "l"
    "i"
    "n"
    "e"
    "."
}

skip transpose-6
test transpose-6 "first line longer than second line" -body {
    transpose {
        "The fourth line."
        "The fifth line."
    }
} -returnCodes OK -match list -result {
    "TT"
    "hh"
    "ee"
    "  "
    "ff"
    "oi"
    "uf"
    "rt"
    "th"
    "h "
    " l"
    "li"
    "in"
    "ne"
    "e."
    "."
}

skip transpose-7
test transpose-7 "second line longer than first line" -body {
    transpose {
        "The first line."
        "The second line."
    }
} -returnCodes OK -match list -result {
    "TT"
    "hh"
    "ee"
    "  "
    "fs"
    "ie"
    "rc"
    "so"
    "tn"
    " d"
    "l "
    "il"
    "ni"
    "en"
    ".e"
    " ."
}

skip transpose-8
test transpose-8 "mixed line length" -body {
    transpose {
        "The longest line."
        "A long line."
        "A longer line."
        "A line."
    }
} -returnCodes OK -match list -result {
    "TAAA"
    "h   "
    "elll"
    " ooi"
    "lnnn"
    "ogge"
    "n e."
    "glr"
    "ei "
    "snl"
    "tei"
    " .n"
    "l e"
    "i ."
    "n"
    "e"
    "."
}

skip transpose-9
test transpose-9 "square" -body {
    transpose {
        "HEART"
        "EMBER"
        "ABUSE"
        "RESIN"
        "TREND"
    }
} -returnCodes OK -match list -result {
    "HEART"
    "EMBER"
    "ABUSE"
    "RESIN"
    "TREND"
}

skip transpose-10
test transpose-10 "rectangle" -body {
    transpose {
        "FRACTURE"
        "OUTLINED"
        "BLOOMING"
        "SEPTETTE"
    }
} -returnCodes OK -match list -result {
    "FOBS"
    "RULE"
    "ATOP"
    "CLOT"
    "TIME"
    "UNIT"
    "RENT"
    "EDGE"
}

skip transpose-11
test transpose-11 "triangle" -body {
    transpose {
        "T"
        "EE"
        "AAA"
        "SSSS"
        "EEEEE"
        "RRRRRR"
    }
} -returnCodes OK -match list -result {
    "TEASER"
    " EASER"
    "  ASER"
    "   SER"
    "    ER"
    "     R"
}

skip transpose-12
test transpose-12 "jagged triangle" -body {
    transpose {
        "11"
        "2"
        "3333"
        "444"
        "555555"
        "66666"
    }
} -returnCodes OK -match list -result {
    "123456"
    "1 3456"
    "  3456"
    "  3 56"
    "    56"
    "    5"
}


cleanupTests
