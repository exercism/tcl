#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
proc skip {args} {
    if {!([info exists ::env(RUN_ALL)] && $::env(RUN_ALL))} {
        ::tcltest::skip {*}$args
    }
}

customMatch boolean booleanMatch
proc booleanMatch {expected actual} {
    return [expr {
        [string is boolean -strict $expected] &&
        [string is boolean -strict $actual] &&
        !!$expected == !!$actual
    }]
}

############################################################
source "armstrong-numbers.tcl"

test armstrong-1 "Zero is an Armstrong number" -body {
    isArmstrongNumber 0
} -returnCodes ok -match boolean -result true

skip armstrong-2
test armstrong-2 "Single digit numbers are Armstrong numbers" -body {
    isArmstrongNumber 5
} -returnCodes ok -match boolean -result true

skip armstrong-3
test armstrong-3 "There are no 2 digit Armstrong numbers" -body {
    isArmstrongNumber 10
} -returnCodes ok -match boolean -result false

skip armstrong-4
test armstrong-4 "Three digit number that is an Armstrong number" -body {
    isArmstrongNumber 153
} -returnCodes ok -match boolean -result true

skip armstrong-5
test armstrong-5 "Three digit number that is not an Armstrong number" -body {
    isArmstrongNumber 100
} -returnCodes ok -match boolean -result false

skip armstrong-6
test armstrong-6 "Four digit number that is an Armstrong number" -body {
    isArmstrongNumber 9474
} -returnCodes ok -match boolean -result true

skip armstrong-7
test armstrong-7 "Four digit number that is not an Armstrong number" -body {
    isArmstrongNumber 9475
} -returnCodes ok -match boolean -result false

skip armstrong-8
test armstrong-8 "Seven digit number that is an Armstrong number" -body {
    isArmstrongNumber 9926315
} -returnCodes ok -match boolean -result true

skip armstrong-9
test armstrong-9 "Seven digit number that is not an Armstrong number" -body {
    isArmstrongNumber 9926314
} -returnCodes ok -match boolean -result false


cleanupTests
