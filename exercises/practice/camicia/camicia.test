#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

############################################################
source "camicia.tcl"

# Uncomment for more verbose test output.
# Ref: https://www.tcl.tk/man/tcl8.6/TclCmd/tcltest.html
#configure -verbose {body error pass msec}

test camicia-1 "two cards, one trick" -body {
    set playerA {2}
    set playerB {3}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 2 tricks 1}

skip camicia-2
test camicia-2 "three cards, one trick" -body {
    set playerA {2 4}
    set playerB {3}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 3 tricks 1}

skip camicia-3
test camicia-3 "four cards, one trick" -body {
    set playerA {2 4}
    set playerB {3 5 6}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 4 tricks 1}

skip camicia-4
test camicia-4 "the ace reigns supreme" -body {
    set playerA {2 A}
    set playerB {3 4 5 6 7}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7 tricks 1}

skip camicia-5
test camicia-5 "the king beats ace" -body {
    set playerA {2 A}
    set playerB {3 4 5 6 K}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7 tricks 1}

skip camicia-6
test camicia-6 "the queen seduces the king" -body {
    set playerA {2 A 7 8 Q}
    set playerB {3 4 5 6 K}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 10 tricks 1}

skip camicia-7
test camicia-7 "the jack betrays the queen" -body {
    set playerA {2 A 7 8 Q}
    set playerB {3 4 5 6 K 9 J}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 12 tricks 1}

skip camicia-8
test camicia-8 "the 10 just wants to put on a show" -body {
    set playerA {2 A 7 8 Q 10}
    set playerB {3 4 5 6 K 9 J}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 13 tricks 1}

skip camicia-9
test camicia-9 "simple loop with decks of 3 cards" -body {
    set playerA {J 2 3}
    set playerB {4 J 5}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status loop cards 8 tricks 3}

skip camicia-10
test camicia-10 "the story is starting to get a bit complicated" -body {
    set playerA {
        2 6 6 J 4 K Q 10 K J Q 2 3 K 5 6 Q Q A A 6 9 K A 8 K 2 A 9 A Q
        4 K K K 3 5 K 8 Q 3 Q 7 J K J 9 J 3 3 K K Q A K 7 10 A Q 7 10 J
        4 5 J 9 10 Q J J K 6 10 J 6 Q J 5 J Q Q 8 3 8 A 2 6 9 K 7 J K K
        8 K Q 6 10 J 10 J Q J 10 3 8 K A 6 9 K 2 A A 10 J 6 A 4 J A J J
        6 2 J 3 K 2 5 9 J 9 6 K A 5 Q J 2 Q K A 3 K J K 2 5 6 Q J Q Q J
        2 J 9 Q 7 7 A Q 7 Q J K J A 7 7 8 Q 10 J 10 J J 9 2 A 2
    }
    set playerB {
        7 2 10 K 8 2 J 9 A 5 6 J Q 6 K 6 5 A 4 Q 7 J 7 10 2 Q 8 2 2 K J
        A 5 5 A 4 Q 6 Q K 10 8 Q 2 10 J A Q 8 Q Q J J A A 9 10 J K 4 Q 10
        10 J K 10 2 J 7 A K K J A J 10 8 K A 7 Q Q J 3 Q 4 A 3 A Q Q Q 5
        4 K J 10 A Q J 6 J A 10 A 5 8 3 K 5 9 Q 8 7 7 J 7 Q Q Q A 7 8 9
        A Q A K 8 A A J 8 4 8 K J A 10 Q 8 J 8 6 10 Q J J A A J 5 Q 6 J
        K Q 8 K 4 Q Q 6 J K 4 7 J J 9 9 A Q Q K A 6 5 K
    }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 361 tricks 1}

skip camicia-11
test camicia-11 "two tricks" -body {
    set playerA {J}
    set playerB {3 J}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 5 tricks 2}

skip camicia-12
test camicia-12 "more tricks" -body {
    set playerA {J 2 4}
    set playerB {3 J A}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 12 tricks 4}

skip camicia-13
test camicia-13 "simple loop with decks of 4 cards" -body {
    set playerA {2 3 J 6}
    set playerB {K 5 J 7}
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status loop cards 16 tricks 4}

skip camicia-14
test camicia-14 "easy card combination" -body {
    set playerA { 4 8 7 5 4 10 3 9 7 3 10 10 6 8 2 8 5 4 5 9 6 5 2 8 10 9 }
    set playerB { 6 9 4 7 2 2 3 6 7 3 A A A A K K K K Q Q Q Q J J J J }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 40 tricks 4}

skip camicia-15
test camicia-15 "easy card combination, inverted decks" -body {
    set playerA { 3 3 5 7 3 2 10 7 6 7 A A A A K K K K Q Q Q Q J J J J }
    set playerB { 5 10 8 2 6 7 2 4 9 2 6 10 10 5 4 8 4 8 6 9 8 5 9 3 4 9 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 40 tricks 4}

skip camicia-16
test camicia-16 "mirrored decks" -body {
    set playerA { 2 A 3 A 3 K 4 K 2 Q 2 Q 10 J 5 J 6 10 2 9 10 7 3 9 6 9 }
    set playerB { 6 A 4 A 7 K 4 K 7 Q 7 Q 5 J 8 J 4 5 8 9 10 6 8 3 8 5 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 59 tricks 4}

skip camicia-17
test camicia-17 "opposite decks" -body {
    set playerA { 4 A 9 A 4 K 9 K 6 Q 8 Q 8 J 10 J 9 8 4 6 3 6 5 2 4 3 }
    set playerB { 10 7 3 2 9 2 7 8 7 5 J 7 J 10 Q 10 Q 3 K 5 K 6 A 2 A 5 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 151 tricks 21}

skip camicia-18
test camicia-18 "random decks #1" -body {
    set playerA { K 10 9 8 J 8 6 9 7 A K 5 4 4 J 5 J 4 3 5 8 6 7 7 4 9 }
    set playerB { 6 3 K A Q 10 A 2 Q 8 2 10 10 2 Q 3 K 9 7 A 3 Q 5 J 2 6 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 542 tricks 76}

skip camicia-19
test camicia-19 "random decks #2" -body {
    set playerA { 8 A 4 8 5 Q J 2 6 2 9 7 K A 8 10 K 8 10 9 K 6 7 3 K 9 }
    set playerB { 10 5 2 6 Q J A 9 5 5 3 7 3 J A 2 Q 3 J Q 4 10 4 7 4 6 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 327 tricks 42}

skip camicia-20
test camicia-20 "Kleber 1999" -body {
    set playerA { 4 8 9 J Q 8 5 5 K 2 A 9 8 5 10 A 4 J 3 K 6 9 2 Q K 7 }
    set playerB { 10 J 3 2 4 10 4 7 5 3 6 6 7 A J Q A 7 2 10 3 K 9 6 8 Q }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 5790 tricks 805}

skip camicia-21
test camicia-21 "Collins 2006" -body {
    set playerA { A 8 Q K 9 10 3 7 4 2 Q 3 2 10 9 K A 8 7 7 4 5 J 9 2 10 }
    set playerB { 4 J A K 8 5 6 6 A 6 5 Q 4 6 10 8 J 2 5 7 Q J 3 3 K 9 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 6913 tricks 960}

skip camicia-22
test camicia-22 "Mann and Wu 2007" -body {
    set playerA { K 2 K K 3 3 6 10 K 6 A 2 5 5 7 9 J A A 3 4 Q 4 8 J 6 }
    set playerB { 4 5 2 Q 7 9 9 Q 7 J 9 8 10 3 10 J 4 10 8 6 8 7 A Q 5 2 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7157 tricks 1007}

skip camicia-23
test camicia-23 "Nessler 2012" -body {
    set playerA { 10 3 6 7 Q 2 9 8 2 8 4 A 10 6 K 2 10 A 5 A 2 4 Q J K 4 }
    set playerB { 10 Q 4 6 J 9 3 J 9 3 3 Q K 5 9 5 K 6 5 7 8 J A 7 8 7 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7207 tricks 1015}

skip camicia-24
test camicia-24 "Anderson 2013" -body {
    set playerA { 6 7 A 3 Q 3 5 J 3 2 J 7 4 5 Q 10 5 A J 2 K 8 9 9 K 3 }
    set playerB { 4 J 6 9 8 5 10 7 9 Q 2 7 10 8 4 10 A 6 4 A 6 8 Q K K 2 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7225 tricks 1016}

skip camicia-25
test camicia-25 "Rucklidge 2014" -body {
    set playerA { 8 J 2 9 4 4 5 8 Q 3 9 3 6 2 8 A A A 9 4 7 2 5 Q Q 3 }
    set playerB { K 7 10 6 3 J A 7 6 5 5 8 10 9 10 4 2 7 K Q 10 K 6 J J K }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7959 tricks 1122}

skip camicia-26
test camicia-26 "Nessler 2021" -body {
    set playerA { 7 2 3 4 K 9 6 10 A 8 9 Q 7 A 4 8 J J A 4 3 2 5 6 6 J }
    set playerB { 3 10 8 9 8 K K 2 5 5 7 6 4 3 5 7 A 9 J K 2 Q 10 Q 10 Q }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 7972 tricks 1106}

skip camicia-27
test camicia-27 "Nessler 2022" -body {
    set playerA { 2 10 10 A J 3 8 Q 2 5 5 5 9 2 4 3 10 Q A K Q J J 9 Q K }
    set playerB { 10 7 6 3 6 A 8 9 4 3 K J 6 K 4 9 7 8 5 7 8 2 A 7 4 6 }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status finished cards 8344 tricks 1164}

skip camicia-28
test camicia-28 "Casella 2024, first infinite game found" -body {
    set playerA { 2 8 4 K 5 2 3 Q 6 K Q A J 3 5 9 8 3 A A J 4 4 J 7 5 }
    set playerB { 7 7 8 6 10 10 6 10 7 2 Q 6 3 2 4 K Q 10 J 5 9 8 9 9 K A }
    simulateGame $playerA $playerB
} -returnCodes ok -match dictionary -result {status loop cards 474 tricks 66}


cleanupTests
