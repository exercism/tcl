#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
proc skip {args} {
    if {!([info exists ::env(RUN_ALL)] && $::env(RUN_ALL))} {
        ::tcltest::skip {*}$args
    }
}

proc orderedListsMatch {expected actual} {
    if {[llength $expected] != [llength $actual]} {
        return false
    }
    foreach e $expected a $actual {
        if {$e != $a} {
            return false
        }
    }
    return true
}
customMatch list orderedListsMatch

############################################################
source "proverb.tcl"

test proverb-1 "zero pieces" -body {
    recite {}
} -returnCodes ok -match list -result {}

skip proverb-2
test proverb-2 "one piece" -body {
    recite { nail }
} -returnCodes ok -match list -result { "And all for the want of a nail." }

skip proverb-3
test proverb-3 "two pieces" -body {
    recite { nail shoe }
} -returnCodes ok -match list -result {
    "For want of a nail the shoe was lost."
    "And all for the want of a nail." 
}

skip proverb-4
test proverb-4 "three pieces" -body {
    recite { nail shoe horse }
} -returnCodes ok -match list -result {
    "For want of a nail the shoe was lost."
    "For want of a shoe the horse was lost."
    "And all for the want of a nail." 
}

skip proverb-5
test proverb-5 "full proverb" -body {
    recite { nail shoe horse rider message battle kingdom }
} -returnCodes ok -match list -result {
    "For want of a nail the shoe was lost."
    "For want of a shoe the horse was lost."
    "For want of a horse the rider was lost."
    "For want of a rider the message was lost."
    "For want of a message the battle was lost."
    "For want of a battle the kingdom was lost."
    "And all for the want of a nail." 
}

skip proverb-6
test proverb-6 "four pieces modernized" -body {
    recite { pin gun soldier battle }
} -returnCodes ok -match list -result {
    "For want of a pin the gun was lost."
    "For want of a gun the soldier was lost."
    "For want of a soldier the battle was lost."
    "And all for the want of a pin." 
}


cleanupTests
