#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
proc skip {args} {
    if {!([info exists ::env(RUN_ALL)] && $::env(RUN_ALL))} {
        ::tcltest::skip {*}$args
    }
}

proc dictionaryMatch {expected actual} {
    if {[dict size $expected] != [dict size $actual]} {
        return false
    }
    dict for {key value} $expected {
        if {![dict exists $actual $key]} {
            return false
        }
        set actualValue [dict get $actual $key]

        # if this value is a dict then recurse, 
        # else just check for string equality
        if {[string is list -strict $value] &&
            [llength $value] > 1 && 
            [llength $value] % 2 == 0
        } {
            set procname [lindex [info level 0] 0]
            if {![$procname $value $actualValue]} {
                return false
            }
        } elseif {$actualValue ne $value} {
            return false
        }
    }
    return true
}
customMatch dictionary dictionaryMatch

############################################################
source "satellite.tcl"

# a non-empty result value is a dictionary with keys:
#   "v"     the root value
#   "l"     the left tree
#   "r"     the right tree

test satellite-1.1 "Empty tree" -body {
    treeFromTraversals {} {}
} -returnCodes ok -match dictionary -result {}

skip satellite-1.2
test satellite-1.2 "Tree with one item" -body {
    treeFromTraversals {a} {a}
} -returnCodes ok -match dictionary -result {v a l {} r {}}

skip satellite-1.3
test satellite-1.3 "Tree with many items" -body {
    treeFromTraversals {a i x f r} {i a f x r}
} -returnCodes ok -match dictionary -result {
    v a
    l {v i l {} r {}}
    r {v x
        l {v f l {} r {}}
        r {v r l {} r {}}
    }
}


skip satellite-2.1
test satellite-2.1 "Reject traversals of different length" -body {
    treeFromTraversals {a b} {b a r}
} -returnCodes error -result "traversals must have the same length"

skip satellite-2.2
test satellite-2.2 "Reject inconsistemt traversals of same length" -body {
    treeFromTraversals {x y z} {a b c}
} -returnCodes error -result "traversals must contain the same elements"

skip satellite-2.3
test satellite-2.3 "Reject traversals with repeated elements" -body {
    treeFromTraversals {a b a} {b a a}
} -returnCodes error -result "traversals must contain unique elements"


cleanupTests
