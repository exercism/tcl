#!/usr/bin/env bash

# This script runs in the tcl-test-runner!

# Synopsis:
# Verify that each exercise's example/exemplar solution passes the tests
# using the track's test runner Docker image.
# You can either verify all exercises or a single exercise.

# Example: verify all exercises in Docker
# bin/verify-exercises-in-docker

# Example: verify specific exercises in Docker
# bin/verify-exercises-in-docker two-fer leap reverse-string

set -eo pipefail

die() { echo "$*" >&2; exit 1; }

copy_example_or_examplar_to_solution() {
    # complexity intended to handle exercises with multiple solution/example files
    jq -c '[.files.solution, .files.exemplar // .files.example] | transpose | map({src: .[1], dst: .[0]}) | .[]' .meta/config.json \
    | while read -r src_and_dst; do
        cp "$(jq -r '.src' <<< "${src_and_dst}")" "$(jq -r '.dst' <<< "${src_and_dst}")"
    done
}

run_tests() {
    local dir slug
    dir=$(realpath "${1}")
    slug=$(basename "${dir}")

    echo "Verifying ${slug} exercise..."

    (
        cd "$dir"
        copy_example_or_examplar_to_solution

        /opt/test-runner/bin/run.tcl "$slug" "$PWD" "$PWD"

        jq -e '.status == "pass"' "${PWD}/results.json" >/dev/null 2>&1
    )
}

verify_exercises() {
    local dirs=()
    if (( $# == 0 )); then
        dirs=( ./exercises/{concept,practice}/* )
    else
        for slug in "${@}"; do
            dirs+=( ./exercises/{concept,practice}/"${slug}" )
        done
    fi

    shopt -s nullglob
    count=0
    failures=0
    for exercise_dir in "${dirs[@]}"; do
        if [[ -d "${exercise_dir}" ]]; then
            run_tests "${exercise_dir}"
            ((++count))
        fi
    done
    ((count > 0)) || die 'no matching exercises found!'
}

verify_exercises "${@}"
